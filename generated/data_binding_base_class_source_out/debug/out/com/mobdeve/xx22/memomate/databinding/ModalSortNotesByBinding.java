// Generated by view binder compiler. Do not edit!
package com.mobdeve.xx22.memomate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobdeve.xx22.memomate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ModalSortNotesByBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RadioButton createdDateSortingRb;

  @NonNull
  public final RadioButton modifiedDateSortingRb;

  @NonNull
  public final RadioButton nameSortingRb;

  @NonNull
  public final TextView sortTitleTv;

  @NonNull
  public final RadioGroup sortingOptionsRg;

  private ModalSortNotesByBinding(@NonNull ConstraintLayout rootView,
      @NonNull RadioButton createdDateSortingRb, @NonNull RadioButton modifiedDateSortingRb,
      @NonNull RadioButton nameSortingRb, @NonNull TextView sortTitleTv,
      @NonNull RadioGroup sortingOptionsRg) {
    this.rootView = rootView;
    this.createdDateSortingRb = createdDateSortingRb;
    this.modifiedDateSortingRb = modifiedDateSortingRb;
    this.nameSortingRb = nameSortingRb;
    this.sortTitleTv = sortTitleTv;
    this.sortingOptionsRg = sortingOptionsRg;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ModalSortNotesByBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ModalSortNotesByBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.modal_sort_notes_by, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ModalSortNotesByBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.createdDateSortingRb;
      RadioButton createdDateSortingRb = ViewBindings.findChildViewById(rootView, id);
      if (createdDateSortingRb == null) {
        break missingId;
      }

      id = R.id.modifiedDateSortingRb;
      RadioButton modifiedDateSortingRb = ViewBindings.findChildViewById(rootView, id);
      if (modifiedDateSortingRb == null) {
        break missingId;
      }

      id = R.id.nameSortingRb;
      RadioButton nameSortingRb = ViewBindings.findChildViewById(rootView, id);
      if (nameSortingRb == null) {
        break missingId;
      }

      id = R.id.sortTitleTv;
      TextView sortTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (sortTitleTv == null) {
        break missingId;
      }

      id = R.id.sortingOptionsRg;
      RadioGroup sortingOptionsRg = ViewBindings.findChildViewById(rootView, id);
      if (sortingOptionsRg == null) {
        break missingId;
      }

      return new ModalSortNotesByBinding((ConstraintLayout) rootView, createdDateSortingRb,
          modifiedDateSortingRb, nameSortingRb, sortTitleTv, sortingOptionsRg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
