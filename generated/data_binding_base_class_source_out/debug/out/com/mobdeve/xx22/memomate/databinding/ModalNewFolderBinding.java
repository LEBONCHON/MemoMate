// Generated by view binder compiler. Do not edit!
package com.mobdeve.xx22.memomate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobdeve.xx22.memomate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ModalNewFolderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton colorBlueBtn;

  @NonNull
  public final ImageButton colorCyanBtn;

  @NonNull
  public final ImageButton colorDefaultBtn;

  @NonNull
  public final ImageButton colorGreenBtn;

  @NonNull
  public final ImageButton colorOrangeBtn;

  @NonNull
  public final ImageButton colorPurpleBtn;

  @NonNull
  public final ImageButton colorRedBtn;

  @NonNull
  public final ImageButton colorYellowBtn;

  @NonNull
  public final GridLayout colorsGl;

  @NonNull
  public final TextView createFolderTv;

  @NonNull
  public final EditText folderNameEt;

  private ModalNewFolderBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton colorBlueBtn, @NonNull ImageButton colorCyanBtn,
      @NonNull ImageButton colorDefaultBtn, @NonNull ImageButton colorGreenBtn,
      @NonNull ImageButton colorOrangeBtn, @NonNull ImageButton colorPurpleBtn,
      @NonNull ImageButton colorRedBtn, @NonNull ImageButton colorYellowBtn,
      @NonNull GridLayout colorsGl, @NonNull TextView createFolderTv,
      @NonNull EditText folderNameEt) {
    this.rootView = rootView;
    this.colorBlueBtn = colorBlueBtn;
    this.colorCyanBtn = colorCyanBtn;
    this.colorDefaultBtn = colorDefaultBtn;
    this.colorGreenBtn = colorGreenBtn;
    this.colorOrangeBtn = colorOrangeBtn;
    this.colorPurpleBtn = colorPurpleBtn;
    this.colorRedBtn = colorRedBtn;
    this.colorYellowBtn = colorYellowBtn;
    this.colorsGl = colorsGl;
    this.createFolderTv = createFolderTv;
    this.folderNameEt = folderNameEt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ModalNewFolderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ModalNewFolderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.modal_new_folder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ModalNewFolderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.colorBlueBtn;
      ImageButton colorBlueBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorBlueBtn == null) {
        break missingId;
      }

      id = R.id.colorCyanBtn;
      ImageButton colorCyanBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorCyanBtn == null) {
        break missingId;
      }

      id = R.id.colorDefaultBtn;
      ImageButton colorDefaultBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorDefaultBtn == null) {
        break missingId;
      }

      id = R.id.colorGreenBtn;
      ImageButton colorGreenBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorGreenBtn == null) {
        break missingId;
      }

      id = R.id.colorOrangeBtn;
      ImageButton colorOrangeBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorOrangeBtn == null) {
        break missingId;
      }

      id = R.id.colorPurpleBtn;
      ImageButton colorPurpleBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorPurpleBtn == null) {
        break missingId;
      }

      id = R.id.colorRedBtn;
      ImageButton colorRedBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorRedBtn == null) {
        break missingId;
      }

      id = R.id.colorYellowBtn;
      ImageButton colorYellowBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorYellowBtn == null) {
        break missingId;
      }

      id = R.id.colorsGl;
      GridLayout colorsGl = ViewBindings.findChildViewById(rootView, id);
      if (colorsGl == null) {
        break missingId;
      }

      id = R.id.createFolderTv;
      TextView createFolderTv = ViewBindings.findChildViewById(rootView, id);
      if (createFolderTv == null) {
        break missingId;
      }

      id = R.id.folderNameEt;
      EditText folderNameEt = ViewBindings.findChildViewById(rootView, id);
      if (folderNameEt == null) {
        break missingId;
      }

      return new ModalNewFolderBinding((ConstraintLayout) rootView, colorBlueBtn, colorCyanBtn,
          colorDefaultBtn, colorGreenBtn, colorOrangeBtn, colorPurpleBtn, colorRedBtn,
          colorYellowBtn, colorsGl, createFolderTv, folderNameEt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
