// Generated by view binder compiler. Do not edit!
package com.mobdeve.xx22.memomate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobdeve.xx22.memomate.R;
import com.mobdeve.xx22.memomate.note.note_drawing.DrawingActivityDisplay;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DrawingActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button brushWidth;

  @NonNull
  public final Button colorPicker;

  @NonNull
  public final DrawingActivityDisplay drawingView;

  @NonNull
  public final Button eraser;

  @NonNull
  public final Button pencil;

  @NonNull
  public final EditText titleEtv;

  private DrawingActivityBinding(@NonNull LinearLayout rootView, @NonNull Button brushWidth,
      @NonNull Button colorPicker, @NonNull DrawingActivityDisplay drawingView,
      @NonNull Button eraser, @NonNull Button pencil, @NonNull EditText titleEtv) {
    this.rootView = rootView;
    this.brushWidth = brushWidth;
    this.colorPicker = colorPicker;
    this.drawingView = drawingView;
    this.eraser = eraser;
    this.pencil = pencil;
    this.titleEtv = titleEtv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DrawingActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DrawingActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.drawing_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DrawingActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brushWidth;
      Button brushWidth = ViewBindings.findChildViewById(rootView, id);
      if (brushWidth == null) {
        break missingId;
      }

      id = R.id.colorPicker;
      Button colorPicker = ViewBindings.findChildViewById(rootView, id);
      if (colorPicker == null) {
        break missingId;
      }

      id = R.id.drawingView;
      DrawingActivityDisplay drawingView = ViewBindings.findChildViewById(rootView, id);
      if (drawingView == null) {
        break missingId;
      }

      id = R.id.eraser;
      Button eraser = ViewBindings.findChildViewById(rootView, id);
      if (eraser == null) {
        break missingId;
      }

      id = R.id.pencil;
      Button pencil = ViewBindings.findChildViewById(rootView, id);
      if (pencil == null) {
        break missingId;
      }

      id = R.id.titleEtv;
      EditText titleEtv = ViewBindings.findChildViewById(rootView, id);
      if (titleEtv == null) {
        break missingId;
      }

      return new DrawingActivityBinding((LinearLayout) rootView, brushWidth, colorPicker,
          drawingView, eraser, pencil, titleEtv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
