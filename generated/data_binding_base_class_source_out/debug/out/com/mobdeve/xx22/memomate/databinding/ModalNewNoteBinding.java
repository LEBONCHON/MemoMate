// Generated by view binder compiler. Do not edit!
package com.mobdeve.xx22.memomate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobdeve.xx22.memomate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ModalNewNoteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button newChecklistNoteBtn;

  @NonNull
  public final Button newDrawingNoteBtn;

  @NonNull
  public final Button newTextNoteBtn;

  @NonNull
  public final TextView passwordTv;

  private ModalNewNoteBinding(@NonNull LinearLayout rootView, @NonNull Button newChecklistNoteBtn,
      @NonNull Button newDrawingNoteBtn, @NonNull Button newTextNoteBtn,
      @NonNull TextView passwordTv) {
    this.rootView = rootView;
    this.newChecklistNoteBtn = newChecklistNoteBtn;
    this.newDrawingNoteBtn = newDrawingNoteBtn;
    this.newTextNoteBtn = newTextNoteBtn;
    this.passwordTv = passwordTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ModalNewNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ModalNewNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.modal_new_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ModalNewNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.newChecklistNoteBtn;
      Button newChecklistNoteBtn = ViewBindings.findChildViewById(rootView, id);
      if (newChecklistNoteBtn == null) {
        break missingId;
      }

      id = R.id.newDrawingNoteBtn;
      Button newDrawingNoteBtn = ViewBindings.findChildViewById(rootView, id);
      if (newDrawingNoteBtn == null) {
        break missingId;
      }

      id = R.id.newTextNoteBtn;
      Button newTextNoteBtn = ViewBindings.findChildViewById(rootView, id);
      if (newTextNoteBtn == null) {
        break missingId;
      }

      id = R.id.passwordTv;
      TextView passwordTv = ViewBindings.findChildViewById(rootView, id);
      if (passwordTv == null) {
        break missingId;
      }

      return new ModalNewNoteBinding((LinearLayout) rootView, newChecklistNoteBtn,
          newDrawingNoteBtn, newTextNoteBtn, passwordTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
